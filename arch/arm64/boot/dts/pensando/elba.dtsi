
/*
 * Copyright (c) 2019, Pensando Systems Inc.
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include "dt-bindings/interrupt-controller/arm-gic.h"

/ {
	compatible = "pensando,elba";

	interrupt-parent = <&gic>;
	#address-cells = <2>;
	#size-cells = <2>;

	clocks {
		ahb_clk: oscillator0 {
			compatible = "fixed-clock";
			#clock-cells = <0>;
		};
		emmc_clk: oscillator2 {
			compatible = "fixed-clock";
			#clock-cells = <0>;
		};
		flash_clk: oscillator3 {
			compatible = "fixed-clock";
			#clock-cells = <0>;
		};
		ref_clk: oscillator4 {
			compatible = "fixed-clock";
			#clock-cells = <0>;
		};
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(1) |
					IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(1) |
					IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(1) |
					IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(1) |
					IRQ_TYPE_LEVEL_LOW)>;
	};

	pmu {
		compatible = "arm,cortex-a72-pmu";
		interrupts = <GIC_PPI 7 (GIC_CPU_MASK_SIMPLE(1) |
				IRQ_TYPE_LEVEL_LOW)>;
	};

	rstcause {
		compatible = "pensando,rstcause";
		pensando,causeregs = <&mssoc 0x2084>;
	};

	soc {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		gic: interrupt-controller@800000 {
			compatible = "arm,gic-v3";
			#interrupt-cells = <3>;
			#address-cells = <2>;
			#size-cells = <2>;
			ranges;
			interrupt-controller;
			reg = <0x0 0x800000 0x0 0x200000>,	// GICD
			      <0x0 0xa00000 0x0 0x200000>;	// GICR
			interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH>;

			its: interrupt-controller@820000 {
				compatible = "arm,gic-v3-its";
				msi-controller;
				#msi-cells = <1>;
				reg = <0x0 0x820000 0x0 0x10000>;
				socionext,synquacer-pre-its =
							<0xc00000 0x1000000>;
			};
		};

		/*
		 * Until we  know the interrupt domain following this, we
		 * are forced to use this is the place where interrupts from
		 * PCI converge. In the ideal case, we use one domain higher,
		 * where the PCI-ness has been shed.
		 */
		pxc0_intr: intc@20102200 {
			compatible = "pensando,soc-ictlr-csrintr";
			interrupt-controller;
			reg = <0x0 0x20102200 0x0 0x4>;
			#interrupt-cells = <3>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI 17 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "pxc0_intr";
		};

		uart0: serial@4800 {
			device_type = "serial";
			compatible = "ns16550a";
			reg = <0x0 0x4800 0x0 0x100>;
			clocks = <&ref_clk>;
			interrupts = <GIC_SPI 2 IRQ_TYPE_LEVEL_HIGH>;
			reg-shift = <2>;
			reg-io-width = <4>;
		};

		qspi: quadspi@2400 {
			compatible = "pensando,cdns-qspi";
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x0 0x2400 0x0 0x400>,
			      <0x0 0x7fff0000 0x0 0x1000>;
			interrupts = <GIC_SPI 0 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&flash_clk>;
			cdns,fifo-depth = <1024>;
			cdns,fifo-width = <4>;
			cdns,trigger-address = <0x7fff0000>;
			status = "disabled";
		};

		gpio0: gpio@4000 {
			#address-cells = <1>;
			#size-cells = <0>;
			compatible = "snps,dw-apb-gpio";
			reg = <0x0 0x4000 0x0 0x78>;
			status = "disabled";

			porta: gpio-controller@0 {
				compatible = "snps,dw-apb-gpio-port";
				gpio-controller;
				#gpio-cells = <2>;
				snps,nr-gpios = <8>;
				reg = <0>;
				interrupts = <GIC_SPI 1 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-controller;
				interrupt-parent = <&gic>;
				#interrupt-cells = <2>;
			};
			portb: gpio-controller@1 {
				compatible = "snps,dw-apb-gpio-port";
				gpio-controller;
				#gpio-cells = <2>;
				snps,nr-gpios = <8>;
				reg = <1>;
			};
		};

		i2c0: i2c@400 {
			compatible = "snps,designware-i2c";
			reg = <0x0 0x400 0x0 0x100>;
			clocks = <&ahb_clk>;
			#address-cells = <1>;
			#size-cells = <0>;
			i2c-sda-hold-time-ns = <480>;
			snps,sda-timeout-ms = <750>;
			interrupts = <GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>;
			status = "disabled";
		};

		/* UIO device using interrupt line PCIEMAC */
		pciemac {
			#address-cells = <2>;
			#size-cells = <2>;
			#interrupt-cells = <3>;

			compatible = "pensando,uio_pciemac";
			register-type = "csr-interrupt";
			interrupt-parent = <&pxc0_intr>;
			interrupts = <GIC_SPI 0 IRQ_TYPE_LEVEL_HIGH>;
			reg = <0x0 0x20102200 0x0 0x10>; /* pxc0_intr */

			enable_csr_paddr = <0x0 0x20102200 0x0 0x10>;
			enable_mask = <(1 << 0)>;
		};

		edac: edac@30500000 {
			compatible = "pensando,elba-edac-mc";
			reg = <0x0 0x30500000 0x0 0x100000>;
			status = "disabled"; /* not available on HAPS */
		};

		/* Common UIO device for MSI drivers */
		uio_penmsi {
			compatible = "pensando,uio_penmsi";
			name = "uio_penmsi";
		};

		/* MSI UIO device 1 */
		uio_penmsi1 {
			compatible = "pensando,uio_penmsi1";
			reg = <0x0 0x520000 0x0 0x10000>;
			msi-parent = <&its 0xa>;
			num-interrupts = <16>;  /* # MSI interrupts to get */
		};

		spics: spics@307c2468 {
			compatible = "pensando,elba-spics";
			reg = <0x0 0x307c2468 0x0 0x4>;
			gpio-controller;
			#gpio-cells = <2>;
		};

		ssi0: ssi@2800 {
			compatible = "pensando,elba-spi";
			reg = <0x0 0x2800 0x0 0x100>;
			clocks = <&ahb_clk>;
			interrupts = <GIC_SPI 9 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			num-cs = <2>;
			status = "disabled";
		};

		wdt0: watchdog@1400 {
			compatible = "snps,dw-wdt";
			reg = <0x0 0x1400 0x0 0x100>;
			clocks = <&ahb_clk>;
			interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>;
			status = "disabled";
		};
		wdt1: watchdog@1800 {
			compatible = "snps,dw-wdt";
			reg = <0x0 0x1800 0x0 0x100>;
			clocks = <&ahb_clk>;
			interrupts = <GIC_SPI 11 IRQ_TYPE_LEVEL_HIGH>;
			status = "disabled";
		};
		wdt2: watchdog@1c00 {
			compatible = "snps,dw-wdt";
			reg = <0x0 0x1c00 0x0 0x100>;
			clocks = <&ahb_clk>;
			interrupts = <GIC_SPI 12 IRQ_TYPE_LEVEL_HIGH>;
			status = "disabled";
		};
		wdt3: watchdog@2000 {
			compatible = "snps,dw-wdt";
			reg = <0x0 0x2000 0x0 0x100>;
			clocks = <&ahb_clk>;
			interrupts = <GIC_SPI 13 IRQ_TYPE_LEVEL_HIGH>;
			status = "disabled";
		};

		emmc: sdio-host-chip@30440000 {
			compatible = "pensando,elba-emmc";
			clocks = <&emmc_clk>;
			interrupts = <GIC_SPI 26 IRQ_TYPE_LEVEL_HIGH>;
			reg = <0x0 0x30440000 0x0 0x10000
			       0x0 0x30480044 0x0 0x4>;
			cdns,phy-input-delay-sd-highspeed = <0x4>;
			cdns,phy-input-delay-legacy = <0x4>;
			cdns,phy-input-delay-sd-uhs-sdr50 = <0x6>;
			cdns,phy-input-delay-sd-uhs-ddr50 = <0x16>;
			cdns,phy-dll-delay-sdclk = <0>;
			cdns,phy-dll-delay-sdclk-hsmmc = <0>;
			cdns,mmc-ddr-1_8v;
			status = "disabled";
		};

		pcie {
			compatible = "pensando,pcie";
			reg = <0x0 0x307c2480 0x0 0x4   /* MS CFG_WDT */
			       0x0 0x00001400 0x0 0x10  /* WDT0 */
			       0x0 0x20000000 0x0 0x00380000>; /* PXB Base */
		};

		panic: panicdump {
			compatible = "pensando,capri-crash";
			status = "disabled";
		};

		mssoc: mssoc@307c0000 {
			compatible = "pensando,mssoc", "syscon";
			reg = <0x0 0x307c0000 0x0 0x3000>;
		};

		bsm {
			compatible = "pensando,bsm";
			reg = <0x0 0x307c2080 0x0 0x4>;
		};
	};

	sbus@307c24a8 {
		compatible = "pensando,sbus";
		sbus-ring-num = <0>;
		reg = <0x0 0x307c24a8 0x0 0x8>;		/* SBUS0 REG */
	};

	sbus@307c24b8 {
		compatible = "pensando,sbus";
		sbus-ring-num = <1>;
		reg = <0x0 0x307c24b8 0x0 0x8>;		/* SBUS1 REG */
	};

	sbus@307c24c8 {
		compatible = "pensando,sbus";
		sbus-ring-num = <2>;
		reg = <0x0 0x307c24c8 0x0 0x8>;		/* SBUS2 REG */
	};

	sbus@6f242134 {
		compatible = "pensando,sbus";
		sbus-ring-num = <3>;
		reg = <0x0 0x6f242134 0x0 0x8>;		/* SBUS3 REG */
	};
};
